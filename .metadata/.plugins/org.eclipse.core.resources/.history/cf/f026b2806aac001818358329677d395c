import edu.princeton.cs.algs4.StdOut;
import edu.princeton.cs.algs4.StdRandom;

public class PercolationStats {

  private int trials;
  private int size;
  private double open

  public PercolationStats(int n, int trials) {
    if (n < 0 || trials <= 0) {
      throw new IllegalArgumentException("Illegal size or no. of trials");
    }
    this.trials = trials;
    Percolation percolation = new Percolation(n);
    while (trials > 0) {
      trials--;
      do {
        int row = StdRandom.uniform(1, n + 1);
        int col = StdRandom.uniform(1, n + 1);
        if (percolation.isOpen(row, col))
          ;
      } while (!percolation.percolates());
    }
  }

  public double mean() {
    // sample mean of percolation threshold
  }

  public double stddev() {
    // sample standard deviation of percolation threshold
  }

  public double confidenceLo() {
    // low endpoint of 95% confidence interval
  }

  public double confidenceHi() {
    // high endpoint of 95% confidence interval
  }

  public static void main(String[] args) {
    PercolationStats stats =
        new PercolationStats(Integer.parseInt(args[0]), Integer.parseInt(args[1]));
    StdOut.println("mean = " + stats.mean());
    StdOut.println("stddev = " + stats.stddev());
    StdOut.println(
        "95% confidence interval = [" + stats.confidenceLo() + ", " + stats.confidenceHi() + "]");
  }

}
